app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true
  '/mta/api':
    target: 'https://mta-openshift-mta.apps.rhdh-dev01.kni.syseng.devcluster.openshift.com'
    allowedMethods: ['GET', 'POST', 'PUT']
    allowedHeaders: ['Authorization', 'XMLHttpRequest']
    headers:
      X-Requested-With: 'XMLHttpRequest'
      Authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJtZUo3NFQySkhHdWxOZGoxRjJKMkMxUmRvcV9VdkNYT3VwaUNweWJxTnRBIn0.eyJleHAiOjE3MDUzNjc3NjAsImlhdCI6MTcwNTMzMTc3OSwiYXV0aF90aW1lIjoxNzA1MzMxNzYwLCJqdGkiOiJhMTFmMGY2OC1kYzJmLTRmYWQtOGViNy00MzRlNmQ2OWVhOGUiLCJpc3MiOiJodHRwczovL210YS1vcGVuc2hpZnQtbXRhLmFwcHMucmhkaC1kZXYwMS5rbmkuc3lzZW5nLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbS9hdXRoL3JlYWxtcy9tdGEiLCJzdWIiOiJlOWUwN2EyNC1lYWNiLTQ0NGEtODkwMS05NTExNzMwNGYwODIiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJtdGEtdWkiLCJub25jZSI6ImM5Yzc5ZjczLTg2MTEtNDk4YS05NDIzLWY5MTYzYjRkZDFkZCIsInNlc3Npb25fc3RhdGUiOiJlM2JmZmQwMS1kODg5LTQ5MjAtOGE1YS1mNGJjZjFjNDQxMmIiLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbIioiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbInRhY2tsZS1hZG1pbiJdfSwic2NvcGUiOiJvcGVuaWQgam9iZnVuY3Rpb25zOmdldCBmaWxlczpwdXQgYnVja2V0czpwb3N0IGFkb3B0aW9ucGxhbnM6cG9zdCB0YXNrczpkZWxldGUgdGFnczpwb3N0IGFwcGxpY2F0aW9uczpwdXQgaWRlbnRpdGllczpwdXQgZGVwZW5kZW5jaWVzOnBvc3QgYnVja2V0czpwdXQgaW1wb3J0czpwdXQgdGFza3MuYnVja2V0OmRlbGV0ZSBhc3Nlc3NtZW50czpkZWxldGUgdGlja2V0czpkZWxldGUgdGlja2V0czpnZXQgc2V0dGluZ3M6Z2V0IGFwcGxpY2F0aW9ucy50YWdzOmRlbGV0ZSBhcHBsaWNhdGlvbnMuZmFjdHM6ZGVsZXRlIHJ1bGVzZXRzOmRlbGV0ZSByZXZpZXdzOnB1dCBqb2JmdW5jdGlvbnM6cHV0IGNhY2hlOmRlbGV0ZSB0YWdzOmdldCBidXNpbmVzc3NlcnZpY2VzOnBvc3Qgam9iZnVuY3Rpb25zOnBvc3QgZW1haWwgdGFnY2F0ZWdvcmllczpwb3N0IHNldHRpbmdzOnB1dCB0YWdzOnB1dCBhcHBsaWNhdGlvbnMudGFnczpwb3N0IHJ1bGVzZXRzOnBvc3QgcmV2aWV3czpkZWxldGUgYnVja2V0czpnZXQgcnVsZXNldHM6Z2V0IGRlcGVuZGVuY2llczpnZXQgYXBwbGljYXRpb25zLnN0YWtlaG9sZGVyczpwdXQgdGFnczpkZWxldGUgdGFza3M6cG9zdCBtaWdyYXRpb253YXZlczpnZXQgYXBwbGljYXRpb25zLnRhZ3M6Z2V0IGltcG9ydHM6cG9zdCB0YXNrczpwdXQgaW1wb3J0czpkZWxldGUgYXBwbGljYXRpb25zLmJ1Y2tldDpwdXQgYXBwbGljYXRpb25zLmJ1Y2tldDpnZXQgZGVwZW5kZW5jaWVzOmRlbGV0ZSBqb2JmdW5jdGlvbnM6ZGVsZXRlIGFzc2Vzc21lbnRzOnB1dCBtaWdyYXRpb253YXZlczpkZWxldGUgcHJveGllczpkZWxldGUgYnVzaW5lc3NzZXJ2aWNlczpkZWxldGUgYXBwbGljYXRpb25zLmJ1Y2tldDpwb3N0IHJldmlld3M6Z2V0IHJldmlld3M6cG9zdCBtaWdyYXRpb253YXZlczpwdXQgYWRkb25zOnBvc3Qgc3Rha2Vob2xkZXJncm91cHM6cHV0IGRlcGVuZGVuY2llczpwdXQgY2FjaGU6Z2V0IGlkZW50aXRpZXM6Z2V0IHN0YWtlaG9sZGVyczpwdXQgZmlsZXM6Z2V0IHNldHRpbmdzOmRlbGV0ZSBhcHBsaWNhdGlvbnMuZmFjdHM6cHV0IGJ1c2luZXNzc2VydmljZXM6cHV0IHJ1bGVzZXRzOnB1dCBidXNpbmVzc3NlcnZpY2VzOmdldCB0cmFja2VyczpkZWxldGUgdGFnY2F0ZWdvcmllczpnZXQgYnVja2V0czpkZWxldGUgcHJvZmlsZSB0YXNrcy5idWNrZXQ6Z2V0IGFzc2Vzc21lbnRzOnBhdGNoIHRpY2tldHM6cHV0IHByb3hpZXM6Z2V0IHRhc2tzLmJ1Y2tldDpwdXQgYXBwbGljYXRpb25zOnBvc3QgYXBwbGljYXRpb25zOmdldCBhZGRvbnM6Z2V0IGFwcGxpY2F0aW9ucy5idWNrZXQ6ZGVsZXRlIGFzc2Vzc21lbnRzOmdldCBpZGVudGl0aWVzOnBvc3Qgc3Rha2Vob2xkZXJzOmRlbGV0ZSB0YWdjYXRlZ29yaWVzOnB1dCBmaWxlczpkZWxldGUgc3Rha2Vob2xkZXJncm91cHM6cG9zdCBtaWdyYXRpb253YXZlczpwb3N0IHN0YWtlaG9sZGVyczpnZXQgYXBwbGljYXRpb25zLmZhY3RzOnBvc3QgdHJhY2tlcnM6Z2V0IHByb3hpZXM6cG9zdCBhZGRvbnM6cHV0IGFkZG9uczpkZWxldGUgc3Rha2Vob2xkZXJzOnBvc3QgYXBwbGljYXRpb25zLmZhY3RzOmdldCB0cmFja2Vyczpwb3N0IHRhc2tzLmJ1Y2tldDpwb3N0IGFwcGxpY2F0aW9uczpkZWxldGUgaWRlbnRpdGllczpkZWxldGUgdHJhY2tlcnM6cHV0IGFzc2Vzc21lbnRzOnBvc3QgaW1wb3J0czpnZXQgdGlja2V0czpwb3N0IHByb3hpZXM6cHV0IHNldHRpbmdzOnBvc3Qgc3Rha2Vob2xkZXJncm91cHM6ZGVsZXRlIHRhZ2NhdGVnb3JpZXM6ZGVsZXRlIHRhc2tzOmdldCBhcHBsaWNhdGlvbnMudGFnczpwdXQgZmlsZXM6cG9zdCBzdGFrZWhvbGRlcmdyb3VwczpnZXQiLCJzaWQiOiJlM2JmZmQwMS1kODg5LTQ5MjAtOGE1YS1mNGJjZjFjNDQxMmIiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIn0.mk-rE1AmHqgjSpCtFMqUUBjXygt-8RIFWB3McGEOhl8PouAaX0vUJiwuNnX2kjmK8CKb464ssC9T90qy4vS0bhI0XEpZQyIrx9fzv9PP8p3tc8JFebgpMEEaaFK5OuUj5L4gBb0hS_Bxi5Yt7tGNf9YuDr1wj-FM371ChwcEu7wLpB25B2QAOW4NpJpft0B2JBCaXpZXlB_jCwYsvopaSQpKGCbP3W8izHXIPHbWyVfIqXXASW_wPHdVrrdexKM0qkUsuL-pSmIXDKgDUyG0Rjzdfme5ezCCJ0WQlPzCaPnVT-sJqeVOZsF6xTgJWDA3-K2fmLx7OH8JkqebEHB6Pg'
    changeOrigin: true
    # Change to "false" in case of using self hosted mta instance with a self-signed certificate
    secure: false

mta:
  uiUrl: 'https://mta-openshift-mta.apps.rhdh-dev01.kni.syseng.devcluster.openshift.com'

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers: {}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]
